from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton

def get_admin_users_keyboard(page: int, users: list, has_next: bool) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∞–¥–º–∏–Ω-—Å–ø–∏—Å–æ–∫):
      1) –ö–Ω–æ–ø–∫–∞ "–ü–æ–ø–æ–ª–Ω–∏—Ç—å" –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ).
      2) –ö–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ ("‚¨Ö –ù–∞–∑–∞–¥" / "‚û° –í–ø–µ—Ä–µ–¥") ‚Äì –µ—Å–ª–∏ –Ω—É–∂–Ω—ã.
    """
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ "–ø–æ–ø–æ–ª–Ω–∏—Ç—å" –ø–æ–¥ –∫–∞–∂–¥—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    for login, balance in users:
        callback_data = f"add_balance_{login}"
        button_text = f"üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å ({login})"
        builder.add(InlineKeyboardButton(text=button_text, callback_data=callback_data))

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    pagination_buttons = []
    if page > 1:
        pagination_buttons.append(
            InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data=f"prev_page_{page - 1}")
        )
    if has_next:
        pagination_buttons.append(
            InlineKeyboardButton(text="‚û° –í–ø–µ—Ä–µ–¥", callback_data=f"next_page_{page + 1}")
        )

    if pagination_buttons:
        builder.row(*pagination_buttons)

    return builder.as_markup()

def get_admin_menu() -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –∫–Ω–æ–ø–æ—á–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    –≠—Ç–æ –º–µ–Ω—é –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–ª–µ–≤–∞ –æ—Ç —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ (ReplyKeyboard).
    """
    keyboard = [
        [
            KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"),
            KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        ],
        [
            KeyboardButton(text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"),
            KeyboardButton(text="üìä –ë–∞–ª–∞–Ω—Å API")
        ],
        [
            KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–∏"),
            KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        ],
        [
            KeyboardButton(text="üö™ –í—ã–π—Ç–∏")
        ],
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –¥–ª—è –≤–∞–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        [
            KeyboardButton(text="‚ö†Ô∏è –†–∞–∑–ª–æ–≥–∏–Ω–∏—Ç—å –≤—Å–µ—Ö")
        ]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_user_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–º–µ–Ω—é –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    builder = InlineKeyboardBuilder()

    # –ü–µ—Ä–≤—ã–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
    builder.row(
        InlineKeyboardButton(text="üí∞ –ú–æ–π –±–∞–ª–∞–Ω—Å", callback_data="user_balance"),
        InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫", callback_data="search_help")
    )

    # –í—Ç–æ—Ä–æ–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫
    builder.row(
        InlineKeyboardButton(text="üîé –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫", callback_data="extended_search_info"),
        InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏", callback_data="logout")
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –ø—Ä–æ–±–∏–≤–∞
    builder.row(
        InlineKeyboardButton(text="üî¢ –ú–∞—Å—Å–æ–≤—ã–π –ø—Ä–æ–±–∏–≤", callback_data="mass_search")
    )

    return builder.as_markup()

def add_navigation_buttons(builder, back_callback=None, main_menu_callback=None):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É InlineKeyboardBuilder

    :param builder: InlineKeyboardBuilder –∫ –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –∫–Ω–æ–ø–∫–∏
    :param back_callback: callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" (–µ—Å–ª–∏ None, –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è)
    :param main_menu_callback: callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" (–µ—Å–ª–∏ None, –∫–Ω–æ–ø–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è)
    :return: –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π builder
    """
    nav_buttons = []

    if back_callback:
        nav_buttons.append(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=back_callback))

    if main_menu_callback:
        nav_buttons.append(InlineKeyboardButton(text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data=main_menu_callback))

    if nav_buttons:
        builder.row(*nav_buttons)

    return builder